name: Build OpenWrt x86_64

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Free up disk space (dotnet, android, haskell, swap, etc.)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Show available disk space
        run: df -h

      - name: Enable universe repo and install dependencies
        run: |
          sudo add-apt-repository universe
          sudo apt-get update
          sudo apt-get install -y \
            python3 python3-setuptools python3-distutils-extra \
            build-essential clang flex bison g++ gawk \
            gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev \
            rsync unzip zlib1g-dev file wget python3-pyelftools ccache

      - name: Prepare openwrt build directory
        run: |
          rm -rf openwrt
          mkdir -p openwrt

      - name: Clone latest OpenWrt source
        run: |
          git clone https://github.com/openwrt/openwrt.git --depth=1 openwrt

      - name: Copy feeds.conf.default
        run: |
          if [ -f config/feeds.conf.default ]; then
            cp config/feeds.conf.default openwrt/feeds.conf.default
          else
            echo "No feeds.conf.default found in config/, skipping copy"
          fi

      - name: Update & install feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Copy config and custom scripts
        run: |
          cp config/.config openwrt/.config
          cp config/customize.sh openwrt/
          cp -r scripts openwrt/scripts
          chmod +x openwrt/customize.sh openwrt/scripts/*.sh

      - name: Debug - list scripts directory and show ext_packages.sh head
        run: |
          echo "=== List files in openwrt/scripts ==="
          ls -l openwrt/scripts || echo "⚠️ openwrt/scripts 不存在"
          echo "=== Show first 20 lines of ext_packages.sh ==="
          if [ -f openwrt/scripts/ext_packages.sh ]; then
            head -n 20 openwrt/scripts/ext_packages.sh
          else
            echo "❌ ext_packages.sh 不存在"
          fi

      - name: Run ext_packages.sh if exists
        run: |
          set -x   # 打开详细命令输出
          cd openwrt
          if [ -f scripts/ext_packages.sh ]; then
            chmod +x scripts/ext_packages.sh
            ./scripts/ext_packages.sh
          else
            echo "❌ scripts/ext_packages.sh 未找到！"
            ls -al scripts || echo "scripts 目录不存在"
            exit 1
          fi

      - name: Clean customize.sh to remove internal 'cd openwrt'
        run: sed -i '/cd openwrt/d' openwrt/customize.sh

      - name: Run customize.sh
        run: |
          cd openwrt
          chmod +x customize.sh
          ./customize.sh

      - name: Make defconfig and download sources
        run: |
          cd openwrt
          make defconfig
          make download -j8

      - name: Build OpenWrt (x86_64 only)
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt-x86_64-firmware
          path: openwrt/bin/targets/x86/64/**/*

      - name: Upload scripts folder for debug
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-scripts-debug
          path: openwrt/scripts

      - name: Create GitHub Release and upload firmware
        uses: ncipollo/release-action@v1
        with:
          tag: openwrt-x86_64-${{ github.run_id }}
          name: OpenWrt x86_64 Build ${{ github.run_number }}
          body: |
            🎉 OpenWrt x86_64 自动构建成功！
            📅 编译时间：${{ github.event.workflow_dispatch.timestamp }}
          artifacts: openwrt/bin/targets/x86/64/**/*
